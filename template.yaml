apiVersion: v1
kind: Template
labels:
  template: spring-boot-application
  group: spring-boot-application
metadata:
  annotations:
    iconClass: icon-java
    tags: spring-boot,java,spring-cloud
  name: spring-boot-application
message: "Depoly Springboot Application"
parameters:
- displayName: Project Name
  value: dlu
  name: PROJECT_NAME
  required: true
- displayName: Application Name
  value: user-mgmt-service
  name: APPLICATION_NAME
  required: true
- displayName: Git Repo URI
  value: https://github.com/DayongLu/user-mgmt-service.git
  name: GIT_URI
  required: true
- displayName: Config Server URI
  value: "http://demo-cs-as-config-server.middleware.svc.cluster.local:8888"
  name: CONFIG_SERVER_URI
  required: false
- displayName: Spring Profile
  value: stage
  name: SPRING_ACTIVE_PROFILE
  required: false
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
  labels:
    app: ${APPLICATION_NAME}
  name: ${APPLICATION_NAME}
  namespace: ${PROJECT_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:latest"
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'springboot-maven3-centos:latest'
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: '-bQnWBPfSehj73jpuwSC'
      type: GitHub
    - generic:
        secret: mlt48zIoqCdRUUKqyvK-
      type: Generic
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${PROJECT_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: SPRING_PROFILES_ACTIVE
            value: ${SPRING_ACTIVE_PROFILE}
          - name: SPRING_APPLICATION_NAME
            value: ${APPLICATION_NAME}
          - name: SPRING_CLOUD_CONFIG_URI
            value: ${CONFIG_SERVER_URI}
        - image: "${APPLICATION_NAME}:latest"
          imagePullPolicy: Always
          name: ${PROJECT_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "${APPLICATION_NAME}", "namespace": "${PROJECT_NAME}", "kind": "DeploymentConfig"}]'
    name: "${APPLICATION_NAME}-pipeline"
  spec:
    source:
      git:
        ref: master
        uri: ${GIT_URI}
      type: Git
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
        jenkinsfilePath: Jenkinsfile